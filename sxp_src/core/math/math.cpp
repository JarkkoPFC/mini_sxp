//============================================================================
// Mini Spin-X Library
//
// Copyright (c) 2024, Jarkko Lempiainen
// All rights reserved.
//============================================================================

#include "sxp_src/sxp_pch.h"
#include "math.h"
using namespace pfc;
//----------------------------------------------------------------------------


//============================================================================
// vec3<vec32s_t>
//============================================================================
const vec3<vec32s_t> vec3<vec32s_t>::s_zero(int8_t(0));
const vec3<vec32s_t> vec3<vec32s_t>::s_one(1);
const vec3<vec32s_t> vec3<vec32s_t>::s_neg_one(-1);
//----------------------------------------------------------------------------


//============================================================================
// vec3<vec32u_t>
//============================================================================
const vec3<vec32u_t> vec3<vec32u_t>::s_zero(uint8_t(0));
const vec3<vec32u_t> vec3<vec32u_t>::s_one(1);
const vec3<vec32u_t> vec3<vec32u_t>::s_neg_one(0xff);
//----------------------------------------------------------------------------


//============================================================================
// vec4<vec32s_t>
//============================================================================
const vec4<vec32s_t> vec4<vec32s_t>::s_zero(int8_t(0));
const vec4<vec32s_t> vec4<vec32s_t>::s_one(1);
const vec4<vec32s_t> vec4<vec32s_t>::s_neg_one(-1);
//----------------------------------------------------------------------------


//============================================================================
// vec4<vec32u_t>
//============================================================================
const vec4<vec32u_t> vec4<vec32u_t>::s_zero(uint8_t(0));
const vec4<vec32u_t> vec4<vec32u_t>::s_one(1);
const vec4<vec32u_t> vec4<vec32u_t>::s_neg_one(0xff);
//----------------------------------------------------------------------------


//============================================================================
// quat<vec32s_t>
//============================================================================
const quat<vec32s_t> quat<vec32s_t>::s_zero(int8_t(0));
const quat<vec32s_t> quat<vec32s_t>::s_one(1);
const quat<vec32s_t> quat<vec32s_t>::s_neg_one(-1);
const quat<vec32s_t> quat<vec32s_t>::s_identity(0, 0, 0, 1);
//----------------------------------------------------------------------------


//============================================================================
// quat<vec32u_t>
//============================================================================
const quat<vec32u_t> quat<vec32u_t>::s_zero(uint8_t(0));
const quat<vec32u_t> quat<vec32u_t>::s_one(1);
const quat<vec32u_t> quat<vec32u_t>::s_neg_one(0xff);
const quat<vec32u_t> quat<vec32u_t>::s_identity(0, 0, 0, 1);
//----------------------------------------------------------------------------
